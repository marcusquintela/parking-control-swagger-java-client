/*
 * Parking Spot Api REST
 * API REST for parking spot control.
 *
 * OpenAPI spec version: 1.0
 * Contact: marcus.quintela@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.ParkingSpotDto;
import io.swagger.client.model.ParkingSpotModel;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ParkingSpotControllerApi
 */
@Ignore
public class ParkingSpotControllerApiTest {

    private final ParkingSpotControllerApi api = new ParkingSpotControllerApi();

    
    /**
     * Delete parking spot by id.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteParkingSpotByIdUsingDELETETest() throws Exception {
        UUID id = null;
        Object response = api.deleteParkingSpotByIdUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Return all parking spot.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllParkingSpotUsingGETTest() throws Exception {
        List<ParkingSpotModel> response = api.getAllParkingSpotUsingGET();

        // TODO: test validations
    }
    
    /**
     * Return a parking spot by id.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getParkingSpotByIdUsingGETTest() throws Exception {
        UUID id = null;
        Object response = api.getParkingSpotByIdUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Save a parking spot.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void saveParkingSpotUsingPOSTTest() throws Exception {
        ParkingSpotDto parkingSpotDto = null;
        Object response = api.saveParkingSpotUsingPOST(parkingSpotDto);

        // TODO: test validations
    }
    
    /**
     * Update parking spot by id.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateParkingSpotByIdUsingPUTTest() throws Exception {
        UUID id = null;
        ParkingSpotDto parkingSpotDto = null;
        Object response = api.updateParkingSpotByIdUsingPUT(id, parkingSpotDto);

        // TODO: test validations
    }
    
}
